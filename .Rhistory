library(jsonlite)
library(tibble)
json_string <- "data/sorcerer.js"
parsed_json <- fromJSON(json_string)
json_string <- "database/build-47954.json"
parsed_json <- fromJSON(json_string)
frost_bolt_data <- parsed_json$Basic$`Frost Bolt`
frost_bolt_data
frost_bolt_data <- parsed_json$Sorcerer$`Skill Tree`$0
frost_bolt_data <- parsed_json$Sorcerer$`Skill Tree`
frost_bolt_data
View(frost_bolt_data)
frost_bolt_data[["0"]][["connections"]]
json_string <- "database/build-47954.json"
parsed_json <- fromJSON(json_string)
# Access the 'Skill Tree' data
skill_tree_data <- parsed_json$Barbarian$`Skill Tree`
skill_tree_data
# Initialize an empty tibble
skill_tree_tibble <- tibble(
id = integer(),
req_points = integer(),
reward_hash = numeric(),
root_node = logical(),
x_pos = numeric(),
y_pos = numeric(),
connections = list()
)
# Iterate over each skill and add to the tibble
for(skill_id in names(skill_tree_data)) {
skill <- skill_tree_data[[skill_id]]
skill_tree_tibble <- add_row(
skill_tree_tibble,
id = skill$id,
req_points = skill$req_points,
reward_hash = skill$reward_hash,
root_node = skill$root_node,
x_pos = skill$x_pos,
y_pos = skill$y_pos,
connections = list(skill$connections)
)
}
skill_tree_data
skill_tree_tibble
extract_skill_tree_data <- function(json_string) {
# Parse the JSON string
parsed_json <- fromJSON(json_string)
# Access the 'Skill Tree' data
skill_tree_data <- parsed_json$Barbarian$`Skill Tree`
# Initialize an empty tibble
skill_tree_tibble <- tibble(
id = integer(),
req_points = integer(),
reward_hash = numeric(),
root_node = logical(),
x_pos = numeric(),
y_pos = numeric(),
connections = list()
)
# Iterate over each skill and add to the tibble
for(skill_id in names(skill_tree_data)) {
skill <- skill_tree_data[[skill_id]]
skill_tree_tibble <- add_row(
skill_tree_tibble,
id = skill$id,
req_points = skill$req_points,
reward_hash = skill$reward_hash,
root_node = skill$root_node,
x_pos = skill$x_pos,
y_pos = skill$y_pos,
connections = list(skill$connections)
)
}
return(skill_tree_tibble)
}
# Iterate over each skill and add to the tibble
for(skill_id in names(skill_tree_data)) {
skill <- skill_tree_data[[skill_id]]
skill_tree_tibble <- add_row(
skill_tree_tibble,
id = skill$id,
req_points = skill$req_points,
reward_hash = skill$reward_hash,
root_node = skill$root_node,
x_pos = skill$x_pos,
y_pos = skill$y_pos,
connections = list(skill$connections)
)
}
skill_tree_data
# Initialize an empty tibble
skill_tree_tibble <- tibble(
id = integer(),
req_points = integer(),
reward_hash = numeric(),
root_node = logical(),
x_pos = numeric(),
y_pos = numeric(),
connections = list()
)
skill_tree_tibble
skill_id
skill_tree_data
names(skill_tree_data)
for(skill_id in names(skill_tree_data)) {
skill <- skill_tree_data[[skill_id]]
skill_tree_tibble <- add_row(
skill_tree_tibble,
id = skill$id,
req_points = skill$req_points,
reward_hash = skill$reward_hash,
root_node = skill$root_node,
x_pos = skill$x_pos,
y_pos = skill$y_pos,
connections = list(skill$connections)
)
}
View(skill_tree_tibble)
json_string <- "database/build-47954.json"
extract_skill_tree_data <- function(json_string) {
# Parse the JSON string
parsed_json <- fromJSON(json_string)
# Access the 'Skill Tree' data
skill_tree_data <- parsed_json$Barbarian$`Skill Tree`
# Initialize an empty tibble
skill_tree_tibble <- tibble(
id = integer(),
req_points = integer(),
reward_hash = numeric(),
root_node = logical(),
x_pos = numeric(),
y_pos = numeric(),
connections = list(),
power_name = character(),
power_tags = list(),
power_tags_localized = list(),
skill_desc = character(),
skill_name = character(),
skill_rankup_desc = character(),
reward = list()
)
# Iterate over each skill and add to the tibble
for(skill_id in names(skill_tree_data)) {
skill <- skill_tree_data[[skill_id]]
power <- skill$power
reward <- skill$reward
skill_tree_tibble <- add_row(
skill_tree_tibble,
id = skill$id,
req_points = skill$req_points,
reward_hash = skill$reward_hash,
root_node = skill$root_node,
x_pos = skill$x_pos,
y_pos = skill$y_pos,
connections = list(skill$connections),
power_name = power$power_name,
power_tags = list(power$power_tags),
power_tags_localized = list(power$power_tags_localized),
skill_desc = power$skill_desc,
skill_name = power$skill_name,
skill_rankup_desc = power$skill_rankup_desc,
reward = list(reward)
)
}
return(skill_tree_tibble)
}
json_string <- "database/build-47954.json"
result <- extract_skill_tree_data(json_string)
parsed_json <- fromJSON(json_string)
# Access the 'Skill Tree' data
skill_tree_data <- parsed_json$Barbarian$`Skill Tree`
skill_tree_data
# Initialize an empty tibble
skill_tree_tibble <- tibble(
id = integer(),
req_points = integer(),
reward_hash = numeric(),
root_node = logical(),
x_pos = numeric(),
y_pos = numeric(),
connections = list(),
power_name = character(),
power_tags = list(),
power_tags_localized = list(),
skill_desc = character(),
skill_name = character(),
skill_rankup_desc = character(),
reward = list()
)
# Iterate over each skill and add to the tibble
for(skill_id in names(skill_tree_data)) {
skill <- skill_tree_data[[skill_id]]
power <- skill$power
reward <- skill$reward
skill_tree_tibble <- add_row(
skill_tree_tibble,
id = skill$id,
req_points = skill$req_points,
reward_hash = skill$reward_hash,
root_node = skill$root_node,
x_pos = skill$x_pos,
y_pos = skill$y_pos,
connections = list(skill$connections),
power_name = power$power_name,
power_tags = list(power$power_tags),
power_tags_localized = list(power$power_tags_localized),
skill_desc = power$skill_desc,
skill_name = power$skill_name,
skill_rankup_desc = power$skill_rankup_desc,
reward = list(reward)
)
}
View(skill_tree_tibble)
